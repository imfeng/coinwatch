{"version":3,"sources":["components/Treemap.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Treemap","_ref","data","react_default","a","createElement","treemap","root","name","color","children","identity","value","innerPadding","outerPadding","label","d","concat","prch","labelSkipSize","labelTextColor","colorBy","borderWidth","borderColor","motionDamping","motionStiffness","animate","tooltip","props","style","loc","theme","container","background","Header","isLive","isActive","selected","handleClick","handleLiveClick","className","data-toggle","role","onClick","disabled","type","initialState","4h","socket","nr","period","periodFormatted","totalCoins","_liveData","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","connectSocket","t","io","setState","state","on","res","symbol","k","keys","newData","update","defineProperty","1","volume","$set","interval","axios","post","timestamp","then","response","catch","error","getTreemapData","dataKeys","length","map","i","last_tick","pre_last_tick","change","toFixed","Math","round","open","close","time","abs","computeColor","slice","e","disconnect","self","assertThisInitialized","target","get","params","result","reduce","acc","curr","bind","_this$state","components_Header","components_Treemap","dist_default","fadeIn","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.420b8452.chunk.js","sourcesContent":["import React from 'react';\nimport { ResponsiveTreeMap } from '@nivo/treemap';\n\nconst Treemap = ({data}) => {\n  // console.log(data)\n  return (\n     <ResponsiveTreeMap\n            root={{\n              name: 'crypto-signal',\n              color: '#f3f9ef',\n              children: data\n            }}\n            identity=\"name\"\n            value=\"loc\"\n            innerPadding={3}\n            outerPadding={4}\n            label={d => `${d.name} ${d.prch ? d.prch + '% ' : ''}`}\n            labelSkipSize={8}\n            labelTextColor=\"inherit:darker(2.8)\"\n            colorBy={d => d.color}\n            borderWidth={1}\n            borderColor=\"inherit:darker(2.3)\"\n            motionDamping={35}\n            motionStiffness={300}\n            animate={false}\n            tooltip={props => {\n              return (\n                <p style={{ color: props.data.color }}>\n                  {' '}\n                  {`${props.data.name} ${\n                    props.data.loc ? props.data.loc + 'x' : ''\n                  }`}{' '}\n                </p>\n              );\n            }}\n            theme={{\n              tooltip: { container: { color: '#fff', background: '#333' } }\n            }}\n          />\n  );\n};\n\nexport default Treemap;\n","import React from 'react';\n\nconst Header = ({\n  isLive,\n  isActive,\n  selected,\n  handleClick,\n  handleLiveClick\n}) => {\n  return (\n    <header className=\"App-header\">\n      <div className=\"btn-group\" data-toggle=\"buttons\" role=\"group\">\n        <button\n          value=\"Live\"\n          onClick={handleLiveClick}\n          className={`live btn  ${isLive ? 'active btn-danger' : 'btn-primary'}`}\n        >\n          Live\n          {isLive ? <div\n            style={{ color: '#ffffff' }}\n            className=\"la-ball-scale-multiple la-dark la-sm\"\n          >\n            <div />\n            <div />\n            <div />\n          </div> : null}\n        </button>\n        <button\n          disabled={!isActive}\n          value=\"1m\"\n          onClick={handleClick}\n          type=\"button\"\n          className={`btn btn-secondary ${selected['1m']}`}\n        >\n          1m\n        </button>\n        <button\n          disabled={!isActive}\n          value=\"5m\"\n          onClick={handleClick}\n          type=\"button\"\n          className={`btn btn-secondary ${selected['5m']}`}\n        >\n          5m\n        </button>\n        <button\n          disabled={!isActive}\n          value=\"15m\"\n          onClick={handleClick}\n          type=\"button\"\n          className={`btn btn-secondary ${selected['15m']}`}\n        >\n          15m\n        </button>\n        <button\n          disabled={!isActive}\n          value=\"30m\"\n          onClick={handleClick}\n          type=\"button\"\n          className={`btn btn-secondary ${selected['30m']}`}\n        >\n          30m\n        </button>\n        <button\n          disabled={!isActive}\n          value=\"1h\"\n          onClick={handleClick}\n          type=\"button\"\n          className={`btn btn-secondary ${selected['1h']}`}\n        >\n          1H\n        </button>\n        <button\n          disabled={!isActive}\n          value=\"4h\"\n          onClick={handleClick}\n          type=\"button\"\n          className={`btn btn-secondary ${selected['4h']}`}\n        >\n          4H\n        </button>\n        <button\n          disabled={!isActive}\n          value=\"8h\"\n          onClick={handleClick}\n          type=\"button\"\n          className={`btn btn-secondary ${selected['8h']}`}\n        >\n          8H\n        </button>\n        <button\n          disabled={!isActive}\n          value=\"1d\"\n          onClick={handleClick}\n          type=\"button\"\n          className={`btn btn-secondary ${selected['1d']}`}\n        >\n          1D\n        </button>\n        <button\n          disabled={!isActive}\n          value=\"1w\"\n          onClick={handleClick}\n          type=\"button\"\n          className={`btn btn-secondary ${selected['1w']}`}\n        >\n          1W\n        </button>\n        <button\n          disabled={!isActive}\n          value=\"1M\"\n          onClick={handleClick}\n          type=\"button\"\n          className={`btn btn-secondary ${selected['1M']}`}\n        >\n          1M\n        </button>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport Treemap from './components/Treemap';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport update from 'immutability-helper';\nimport { isEqual } from 'lodash';\nimport _live from './utils';\nimport Spinner from 'react-spinkit';\nimport Header from './components/Header';\nimport './App.css';\n// import logo from './logo.svg';\n\nlet initialState = {\n  isActive: true,\n  selected: { '4h': 'active' },\n  isLive: false,\n  socket: null,\n  nr: '',\n  period: '',\n  periodFormatted: '',\n  totalCoins: 0,\n  data: {},\n  _liveData: []\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    const setState = this.setState.bind(this);\n    let self = this;\n    axios\n      .get('/', {\n        params: {\n          timestamp: '4h'\n        }\n      })\n      .then(function(response) {\n        let res = response.data.result.reduce((acc, curr, i) => {\n          acc[curr['symbol']] = curr[curr['symbol']];\n          return acc;\n        }, {});\n        setState({ data: res });\n      })\n      .catch(function(error) {});\n  }\n\n  connectSocket = t => {\n    // console.log('connect socket', t, typeof t)\n    const socket = io('http://localhost:3231');\n    this.setState({ socket });\n    if (typeof t !== 'string') this.setState({ isLive: !this.state.isLive });\n\n    socket.on('retrieve', res => {\n      const { symbol } = res;\n      // let x = this.state.data[res['symbol']][1].volume\n      let k = Object.keys(res[res['symbol']]);\n      // console.log(res['symbol'],res[res['symbol']], k, res[res['symbol']][k[1]])\n      if (k[1] in res[res['symbol']]) {\n        const newData = update(this.state, {\n          data: {\n            [res['symbol']]: {\n              1: { volume: { $set: res[res['symbol']][k[1]].volume } }\n            }\n          }\n        });\n        // console.log('===',this.state.data[res['symbol']][0], Object.keys(res[res['symbol']])[1], res[res['symbol']][k[0]])\n        this.setState({ data: newData.data });\n      }\n    });\n\n    const interval = Object.keys(this.state.selected)[0];\n\n    axios\n      .post('http://localhost:3231', {\n        timestamp: t || interval\n      })\n      .then(function(response) {})\n      .catch(function(error) {});\n  };\n\n  getTreemapData = () => {\n    const { data } = this.state;\n    const dataKeys = Object.keys(data);\n\n    if (dataKeys.length) {\n      const coins = dataKeys.map(i => {\n        let name = i;\n        let last_tick = data[i][1];\n        let pre_last_tick = data[i][0];\n        let change =\n          +pre_last_tick.volume !== 0\n            ? (last_tick.volume / pre_last_tick.volume).toFixed(3)\n            : 0;\n        let loc = change > 0 ? Math.round(change * 100) / 100 : 0;\n        let open = last_tick.open;\n        let close = last_tick.close;\n        let time = Math.abs(last_tick.time - pre_last_tick.time) / 36e5;\n        let prch =\n          open < close\n            ? (close / open) * 100 - 100\n            : 100 - (open / close) * 100;\n        let color = this.computeColor(prch);\n\n        return {\n          time,\n          open,\n          name:\n            name.slice(-4) == 'USDT' ? name.slice(0, -4) : name.slice(0, -3),\n          loc,\n          prch: prch.toFixed(2),\n          color\n        };\n      });\n      return coins;\n    }\n    return { name: 'g', loc: 32, prch: 3, color: 'red' };\n  };\n\n  computeColor = prch => {\n    if (prch < 0) {\n      return prch < -3\n        ? prch < -6\n          ? prch < -15\n            ? '#DB4B38'\n            : '#E97253'\n          : '#EE9778'\n        : '#fcd3bf';\n    }\n    return prch > 3\n      ? prch > 10\n        ? prch > 15\n          ? '#5FA964'\n          : '#ACD6A0'\n        : '#CDE7C2'\n      : '#e4efdc';\n  };\n\n  handleLiveClick = e => {\n    if (this.state.isLive) {\n      this.state.socket.disconnect();\n      this.setState({ isLive: false });\n      return;\n    }\n    this.connectSocket();\n  };\n\n  handleClick = e => {\n    let self = this;\n    this.setState({\n      selected: { [e.target.value]: 'active' },\n      isActive: false\n    });\n    if (this.state.isLive) this.connectSocket(e.target.value);\n    axios\n      .get('/', {\n        params: {\n          timestamp: e.target.value\n        }\n      })\n      .then(function(response) {\n        let res = response.data.result.reduce((acc, curr, i) => {\n          acc[curr['symbol']] = curr[curr['symbol']];\n          return acc;\n        }, {});\n        self.setState({ data: res, isActive: true });\n      })\n      .catch(function(error) {})\n  };\n\n  render() {\n    const { isLive, isActive, selected } = this.state;\n    let data = this.getTreemapData();\n    return (\n      <div className=\"App\">\n        <Header\n          isLive={isLive}\n          isActive={isActive}\n          selected={selected}\n          handleClick={this.handleClick}\n          handleLiveClick={this.handleLiveClick}\n        />\n        {data.length > 90 && isActive ? (\n          <Treemap data={data} />\n        ) : (\n          <Spinner fadeIn=\"none\" className=\"spinner\" />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}